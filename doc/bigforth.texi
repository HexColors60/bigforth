\input texinfo   @c -*-texinfo-*-

@comment %**start of header (This is for running Texinfo on a region.)
@setfilename bigforth.info
@settitle bigFORTH/MINOS Manual
@dircategory GNU programming tools
@direntry
* bigFORTH: (bigforth).         A fast interpreter for the Forth language.
@end direntry
@comment @setchapternewpage odd
@comment TODO this gets left in by HTML converter
@macro progstyle {}
Programming style note:
@end macro
@comment %**end of header (This is for running Texinfo on a region.)

@include version.texi

@ifinfo
This file documents bigFORTH/MINOS @value{VERSION}

Copyright @copyright{} 1995-1999 Free Software Foundation, Inc.

     Permission is granted to make and distribute verbatim copies of
     this manual provided the copyright notice and this permission notice
     are preserved on all copies.
     
@ignore
     Permission is granted to process this file through TeX and print the
     results, provided the printed document carries a copying permission
     notice identical to this one except for the removal of this paragraph
     (this paragraph not being relevant to the printed manual).
     
@end ignore
     Permission is granted to copy and distribute modified versions of this
     manual under the conditions for verbatim copying, provided also that the
     sections entitled "Distribution" and "General Public License" are
     included exactly as in the original, and provided that the entire
     resulting derived work is distributed under the terms of a permission
     notice identical to this one.
     
     Permission is granted to copy and distribute translations of this manual
     into another language, under the above conditions for modified versions,
     except that the sections entitled "Distribution" and "General Public
     License" may be included in a translation approved by the author instead
     of in the original English.
@end ifinfo

@finalout
@titlepage
@sp 10
@center @titlefont{bigFORTH/MINOS Manual}
@sp 2
@center for version @value{VERSION}
@sp 2
@center Bernd Paysan
@sp 3
@center This manual is permanently under construction and was last updated on 21-August-1999

@end titlepage

@node Top, MINOS Documentation,, (dir)
@ifinfo
Gforth is a free implementation of ANS Forth available on many
personal machines. This manual corresponds to version @value{VERSION}.
@end ifinfo

@menu
* MINOS Documentation::         The documentation of the MINOS widget set
* Theseus Tutorial::            A tutorial introducing into Theseus
* License::                     The GPL
@end menu

@node MINOS Documentation, Theseus Tutorial , Top, Top

@chapter MINOS Documentation

@menu 
* Introduction::       Oh no, it's Forth again...
* Widget Classes::     The Widget Set of MINOS.
@end menu

@node Introduction, Widget Classes, MINOS Documentation,  MINOS Documentation
@section Introduction
@menu
* Abstract::           What MINOS is.
* WYSIWYD::            What You See Is What You Do.
* Visual Forth::       The Man Month Myth.
* Codename MINOS::     Where the Name come from.
* Windoze::            Porting Notes.
@end menu


@node Abstract, WYSIWYD, Introduction, Introduction
@subsection Abstract

MINOS is the answer to the question ``Is there something like
Visual BASIC (Microsoft) or Delphi (Inprise) in Forth?'' --- and the
answer is ``yes''.

Basically, these GUI RADs contain two components: a library with a
wide variety of elements for a graphical user interface; e.g. windows,
buttons, edit-controls, drawing areas, etc.; and an editor to combine
the elements with the mouse by drag&drop or click&point
actions. Missing code then is inserted to add actions when buttons are
pressed.

Typical applications are often related to data base
access. Therefore, many of these systems already contain a data base
engine or at least a standardized interface to a data base, such as
ODBC.

Another aspect are complex components. With some of these toolkits,
you can create a web browser with some mouse clicks and a few
keystrokes. However, these components hide their details, a shrink
wrapped web browser application is not necessarily worse.

The interactivity of these tools usually is not very high. You
create your form, write your actions as code and compile it more
(Delphi) or less (Visual Age for C++) fast. Trying it usually isn't
possible before the compiler run.

@node WYSIWYD, Visual Forth, Abstract, Introduction
@subsection WYSIWYD


It isn't really necessary to brush graphical user interfaces
together, as it isn't to edit texts WYSIWYG. Many typesetting
functions are more semantically than visual, e.g. a text is a headline
or emphasized instead of written in bold 18 point Garamond or 11 point
Roman italics. All this is true for user interfaces, to some extend
much more. It's not the programmer that decides which font and size to
use for the UI --- that's up to the user. As is color of buttons and
texts.

Also to layout individual widgets, more abstraction than defining
position, width and height makes sense. Typically buttons are arranged
horizontally or vertically, perhaps with a bit distance between
them. The size of buttons must follow the containing strings, and
should conform to aesthetics (e.g. each button in a row has the same
width).

Such an abstract model, related to TeX's boxes&glues, programs
quite good even without a visual editor. The programmer isn't
responsible for ``typesetting'' the buttons and boxes. This approach
is quite usual in Unix. Motif and Tcl/Tk use neighborhood relations,
Interviews uses boxes&glues. I decided for boxes&glues, since it's a
fast and intuitive solution, although it needs more objects to get the
same result.

These concepts contradict somehow with a graphical editing process,
since the editors I know don't provide abstract concepts (``place left
of an object'' or ``place in a row''), but positions.

@node Visual Forth, Codename MINOS, WYSIWYD, Introduction
@subsection Visual Forth


One point makes me think: the packets that allow real visual form
programming have many years of programming invested in. Microsoft,
Borland, and IBM may hire hundreds of programmers just for one such
project. This man-power isn't available for any Forth project. But
stop:

@enumerate 1
@item Forth claims that good programmers can work much more
efficient with Forth

@item A team of 300 (wo)men blocks itself. If the boss partitions the
work, the programmers need to document functions, and to read
documents from other programmer related to other functions and must
understand them, or ask questions to figure things out. Everybody
knows that documenting takes much longer than writing the code, and
explaining is even worse. Thus at a certain project complexity level,
no time is left for the programming task; all time is used to specify
planned functions and read the specification from other
programmers. Or the programmers just chat before the door holes of the
much too small and noisy cubicles.

@item A good programmer reportedly works 20 times as fast as a bad,
even though he can't type in more key strokes per time. The resulting
program is either up to 20 times shorter or has 20 times less bugs (or
both) --- with more functionality at the same time. Teamwork however
prevents good programmers from work, since they are frustrated by bad
programmers surrounding them, from their inability to produce required
information in time; and the bad programmers are frustrated by the
good ones, which makes them even worse.

@item Therefore, even in large projects, the real work is (or should
be) done by a small ``core team''. Then the Dilbert rule applies: what
can be done with two people, can be done with one at half of the
costs.

@end enumerate

Furthermore, bigFORTH-DOS already contains a ``Text-GUI'', without
graphical editor, but with an abstract boxes&glue concept, which, as
claimed above, hinders the use of such an editor.

Finally I wanted to get rid of DOS, and port bigFORTH to a real
operating system (Linux). In contrast to Windows and OS/2, user
interface and screen access are separated there. Drawing on the screen
uses the X Window System (short X), the actual user interface is
implemented in a library. This is the reason, why there is no common
interface, but a lot of different libraries, such as Athena Widgets,
Motif, Tcl/Tk, xforms, Qt, gtk, and others. The ``look and feel'' from
Motif-like buttons is quite common, even Windows and MacOS resemble
it.

All these libraries have disadvantages. The Athena Widgets are
hopelessly outdated.  Motif is commercial, even if a free clone
(Lesstif) is in creation. It's slow and a memory hog. Tcl/Tk consumes
less memory, but it's @emph{even} slower.  How do you explain your
users that drawing a window takes seconds, while Quake renders
animated 3D-graphic on the same machine? Qt is fast, but it's written
in C++ and doesn't have a foreign language interface now. gtk, the
GIMP toolkit, has more foreign language interfaces, and it's free, but
it wasn't available until recently.

Therefore I decided to port the widget classes from bigFORTH-DOS
to X, and write an editor for it. Such classes written in Forth
naturally fit in an development environment and are --- from the Forth
point of view --- easier to maintain.  There are not such many widget
libraries in C, because it's a task written in an afternoon, but
because the available didn't fit the requests, and a modification
looked desperate.

@node Codename MINOS, Windoze , Visual Forth, Introduction
@subsection Codename MINOS


``Visual XXX'' is an all day's name, and it's too much of a
microsoftism for me. ``Forth'' is a no-word, especially since the
future market consists of one billion Chinese, and for them four is a
number of unluck (because ``se'' (four) sounds much like ``se''
(death)). However, even Borland doesn't call their system ``Visual
TurboPascal'', but ``Delphi''.

Greek is good, anyway, since this library relates to the
boxes&glues model of TeX, which is pronounced Greek, too. Compared
with Motif, the library is quite copact (MINimal), and since it's
mainly for Linux, the phonetic distance is small... I pronounce it
Greek: ``meenoz''.

@node Windoze , , Codename MINOS, Introduction
@subsection Windoze


I ported MINOS to Windows 95/NT, on the demand of some potential
users. It doesn't run near as stable as under Linux/X, since there are
a hideous number of subtle bugs in Windows, and I don't have the time
to work around all of them. Drawing polygons doesn't work as well as
on X, and all the bugs that are in the memory drawing device can drive
me nuts. The Windows port of MINOS looks more like the ``modern
Forth'' Claus Vogt portrayed in @url{news:de.comp.lang.forth}: it shows random
general protection faults. Well, just like any other Windows
program.


@node Widget Classes, , Introduction,  MINOS Documentation
@section Widget Classes


The primary classes of MINOS are gadgets (widgets and displays),
actors, and resources (xresource and font).

Resources just provide system-specific data like window handles,
display pointers, font informations, etc., they are critical for
system-specific parts of display implementations.

Widgets are the central objects represented on screen. Widgets draw
through displays, such as windows, viewports, etc. Since many displays
can be embedded into a bigger window, they also have all widget
functionality. Widgets are composed in boxes (horizontal and
vertical), and automatically layouted. Boxes certainly are widgets
themselves, and some of the more complicated widgets such as sliders
or textboxes are derived from boxes to layout the inner parts easily.

Actors are bound to associated actions when operating a widget
(i.e. clicking on it, pointing on it, or entering text). Actors
provide the way to script actions.

@menu
* Actors::
* Ressources::
* Widgets::
* Boxes::
* Displays::
@end menu

@node Actors, Ressources, Widget Classes, Widget Classes
@subsection Actors

@b{ACTOR}
@itemize @bullet
@item All Actors have the following methods in common:
@itemize @bullet
@item @b{called} This variable points to the object that is being called
@item @b{caller} This variable points to the object that is
calling (the widget).
@item @b{set} ( --- ) sets the flag
@item @b{reset} ( --- ) resets the flag
@item @b{toggle} ( --- ) toggles the flag
@item @b{fetch} ( --- x1 .. xn ) queries the value(s)
@item @b{store} ( x1 .. xn --- ) changes the value(s)
@item @b{click} ( x y b n --- ) performs the action for a click
@item @b{key} ( key sh --- ) performs the action for a keystroke
@item @b{enter} ( --- ) performs the action for entering the widget
@item @b{leave} ( --- ) performs the action for leaving the widget
@item @b{assign} ( x1 .. xn --- ) initially assigns the state
@item @b{set-called} ( o --- ) sets the called object
@end itemize
The stack effect you see below is the stack effect of the init method.
@item @b{KEY-ACTOR} This is an actor for keyboard macros. It
inserts keystrokes into the called widget.
@item @b{TOOLTIP} ( actor tip --- ) A tooltip is a nested actor; it shows
the widget tip some time after entering with the mouse, and forwards the other
messages to actor
@item @b{EDIT-ACTION} ( o xt --- ) This actor handles text input field key
events, and does all the editing stuff. After each keystroke and each click,
it calls xt ( --- ).
@itemize @bullet 
@item @b{NUMBER-ACTION} ( o xt --- ) Same as EDIT-ACTION, but filters
out digits only
@end itemize
@item @b{SCALE-VAR} ( o pos max --- ) Scaler actor,
keeps position and maximum value in own variables.
@itemize @bullet 
@item @b{SCALE-DO} ( o pos max xt --- ) Same as SCALE-VAR, but executes
xt ( pos --- ) on changes
@item @b{SLIDER-VAR} ( o pos max step --- ) Slider actor, keeps position,
step, and maximum value in own variables
@itemize @bullet 
@item @b{SLIDER-DO} ( o pos max step xt --- ) Same as SLIDER-VAR,
but executes xt ( --- ) on changes
@end itemize
@end itemize
@item @b{SIMPLE} ( o xt --- ) xt is executed at every store (no
state maintained)
@itemize @bullet 
@item @b{DRAG} ( o xt --- ) Calls toggle on each click event
@item @b{REP} ( o xt --- ) Calls toggle repeatedly while the user holds down
the mouse button
@end itemize
@item @b{TOGGLE-STATE} ( o xtstore xtfetch --- ) allows generic fetch
and store functions
@itemize @bullet 
@item @b{SCALE-ACT} ( o do-store do-fetch max --- ) Generic slider
actor (maximum slider position provided)
@itemize @bullet 
@item @b{SLIDER-ACT} ( o do-store do-fetch max --- ) Generic scaler
actor (maximum scaler position provided)
@end itemize
@end itemize
@item @b{TOGGLE-VAR} ( o addr xt --- ) keeps the flag in addr,
and executes xt on changes
@itemize @bullet 
@item @b{TOGGLE-NUM} ( o n addr xt --- ) is responsible for state n in addr
(sets addr to n when set), and executes xt on changes
@end itemize
@item @b{TOGGLE} ( o state xtset xtreset --- ) models a flag with
initial state and two functions for each state
@end itemize



@node Ressources, Widgets, Actors, Widget Classes
@subsection Resources

@b{XRESOURCE}

@b{FONT}
@itemize @bullet 
@item @b{X-FONT}
@end itemize

@node Widgets, Boxes, Ressources, Widget Classes
@subsection Widgets

@b{GADGET}
@itemize @bullet
@item @b{WIDGET}
@itemize @bullet 
@item @b{TERMINAL}
@itemize @bullet 
@item @b{SCREDIT}
@itemize @bullet
@item @b{STREDIT}
@end itemize
@end itemize
@end itemize
@item @b{ARULE}
@itemize @bullet 
@item @b{BOXCHAR}
@itemize @bullet
@item @b{HRTSIZER}
@itemize @bullet
@item @b{HXRTSIZER}
@item @b{HSIZER}
@end itemize
@item @b{VRTSIZER}
@itemize @bullet 
@item @b{VXRTSIZER}
@item @b{VSIZER}
@end itemize
@item @b{BUTTON}
@itemize @bullet
@item @b{ALERTBUTTON}
@item @b{MENU-ENTRY}
@itemize @bullet
@item @b{EDIMENU-ENTRY}
@itemize @bullet 
@item @b{MENU-TITLE}
@item @b{SUB-MENU}
@end itemize
@end itemize
@item @b{(TEXTFIELD}
@itemize @bullet 
@item @b{ICON-BUTTON}
@itemize @bullet 
@item @b{BIG-ICON}
@item @b{ICON-BUT}
@end itemize
@end itemize
@item @b{LBUTTON}
@itemize @bullet 
@item @b{FILE-WIDGET}
@itemize @bullet 
@item @b{TEXT-LABEL}
@itemize @bullet 
@item @b{MENU-LABEL}
@end itemize
@end itemize
@end itemize
@end itemize
@item @b{TOGGLECHAR}
@itemize @bullet 
@item @b{FLIPICON}
@item @b{TOGGLEICON}
@item @b{TBUTTON}
@itemize @bullet 
@item @b{TICONBUTTON}
@item @b{TOGGLEBUTTON}
@item @b{TOPINDEX}
@item @b{FLIPBUTTON}
@item @b{RBUTTON}
@end itemize
@end itemize
@item @b{TRIBUTTON}
@itemize @bullet 
@item @b{SLIDETRI}
@end itemize
@end itemize
@end itemize
@end itemize

@node Boxes, Displays, Widgets, Widget Classes
@subsection Boxes

@example
COMBINED                  44  E4  40139938
  VBOX                    44  E4  4013B15C
    SLIDERVIEW            4C  E8  40146360
      ASLIDERVIEW         4C  E8  40146C2C
    VSLIDER               44  E8  401423B4
      VSCALER             50  EC  401434F4
      VSLIDER0            44  E8  40142B74
    VRBOX                 44  E4  40140E74
    VTBOX                 44  E4  4013C59C
      VRTBOX              44  E4  4014163C
      VATBOX              44  E4  4013CB70
        VARTBOX           44  E4  40141760
    COMPONENT             44  E4  4013BC8C
      VASBOX              4C  E8  40147340
      VRESIZE             44  E4  40146FF0
      MODAL               48  E4  401418AC
      VARBOX              44  E4  40141058
  HBOX                    44  E4  4013A84C
    INFO-MENU             54  E4  4014CA70
    HSLIDER               44  E8  40141D94
      HSCALER             50  EC  40142E98
      HSLIDER0            44  E8  4014292C
    HRBOX                 44  E4  401411B8
    HTBOX                 44  E4  4013C0E8
      HRTBOX              44  E4  401413F8
      HATBOX              44  E4  4013CA50
        HARTBOX           44  E4  4014151C
    HABOX                 44  E4  4013BFC8
      HASBOX              4C  E8  40147558
      HRESIZE             44  E4  40147138
      HARBOX              44  E4  401412D8
      TEXTFIELD           48  E4  40140A08
        INFOTEXTFIELD     4C  E4  40140C38
(NIL                      24  C8  40137B80
GLUE                      34  C8  401379F8
  GLCANVAS                58  CC  4014B670
  RULE                    38  C8  40138458
    CANVAS                78 118  40138FCC
    MFILL                 38  C8  40138A48
    MSKIP                 38  C8  40138908
      SSKIP               40  C8  40146178
    VRULE                 38  C8  40138734
    HRULE                 38  C8  40138618
  VGLUE                   34  C8  40138308
  HGLUE                   34  C8  401381EC
    TOPGLUE               34  C8  4013E908
ICON                      28  C8  401377E4
ICON-PIXMAP               2C  CC  4013761C
@end example

@node Displays,, Boxes, Widget Classes
@subsection Displays

@example
DISPLAYS                    90 178  4012FC60
  WINDOW                    A4 194  40148B18
    FILE-SELECTOR           C4 198  40151AB8
    MENU-WINDOW             A4 194  4014D09C
    FRAME                   A8 1A4  4014A698
      MENU-FRAME            A8 1A4  4014C0D0
      FRAME-TIP             AC 1A4  4014AD94
    WINDOW-STUB             A4 194  4014A2C0
  (NILSCREEN                90 178  40137D00
  BACKING                   A8 17C  40131DD0
    VIEWPORT                E0 190  40143EB4
      SCRVIEWPORT           E0 190  40123590
      HVIEWPORT             E8 190  40145F14
      VVIEWPORT             E8 190  40145CC4
    BEAMER                  B8 180  401330F8
    DOUBLEBUFFER            A8 17C  40132DB0 ok
@end example


@node Theseus Tutorial, License, MINOS Documentation, Top
@section Theseus Tutorial


@ifinfo 
Only a ToDo until yet.
@end ifinfo

@node License, , Theseus Tutorial, Top
@unnumbered GNU GENERAL PUBLIC LICENSE
@center Version 2, June 1991

@display
Copyright @copyright{} 1989, 1991 Free Software Foundation, Inc.
675 Mass Ave, Cambridge, MA 02139, USA

Everyone is permitted to copy and distribute verbatim copies
of this license document, but changing it is not allowed.
@end display

@unnumberedsec Preamble

  The licenses for most software are designed to take away your
freedom to share and change it.  By contrast, the GNU General Public
License is intended to guarantee your freedom to share and change free
software---to make sure the software is free for all its users.  This
General Public License applies to most of the Free Software
Foundation's software and to any other program whose authors commit to
using it.  (Some other Free Software Foundation software is covered by
the GNU Library General Public License instead.)  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
this service if you wish), that you receive source code or can get it
if you want it, that you can change the software or use pieces of it
in new free programs; and that you know you can do these things.

  To protect your rights, we need to make restrictions that forbid
anyone to deny you these rights or to ask you to surrender the rights.
These restrictions translate to certain responsibilities for you if you
distribute copies of the software, or if you modify it.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must give the recipients all the rights that
you have.  You must make sure that they, too, receive or can get the
source code.  And you must show them these terms so they know their
rights.

  We protect your rights with two steps: (1) copyright the software, and
(2) offer you this license which gives you legal permission to copy,
distribute and/or modify the software.

  Also, for each author's protection and ours, we want to make certain
that everyone understands that there is no warranty for this free
software.  If the software is modified by someone else and passed on, we
want its recipients to know that what they have is not the original, so
that any problems introduced by others will not reflect on the original
authors' reputations.

  Finally, any free program is threatened constantly by software
patents.  We wish to avoid the danger that redistributors of a free
program will individually obtain patent licenses, in effect making the
program proprietary.  To prevent this, we have made it clear that any
patent must be licensed for everyone's free use or not licensed at all.

  The precise terms and conditions for copying, distribution and
modification follow.

@iftex
@unnumberedsec TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
@end iftex
@ifinfo
@center TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
@end ifinfo

@enumerate 0
@item
This License applies to any program or other work which contains
a notice placed by the copyright holder saying it may be distributed
under the terms of this General Public License.  The ``Program'', below,
refers to any such program or work, and a ``work based on the Program''
means either the Program or any derivative work under copyright law:
that is to say, a work containing the Program or a portion of it,
either verbatim or with modifications and/or translated into another
language.  (Hereinafter, translation is included without limitation in
the term ``modification''.)  Each licensee is addressed as ``you''.

Activities other than copying, distribution and modification are not
covered by this License; they are outside its scope.  The act of
running the Program is not restricted, and the output from the Program
is covered only if its contents constitute a work based on the
Program (independent of having been made by running the Program).
Whether that is true depends on what the Program does.

@item
You may copy and distribute verbatim copies of the Program's
source code as you receive it, in any medium, provided that you
conspicuously and appropriately publish on each copy an appropriate
copyright notice and disclaimer of warranty; keep intact all the
notices that refer to this License and to the absence of any warranty;
and give any other recipients of the Program a copy of this License
along with the Program.

You may charge a fee for the physical act of transferring a copy, and
you may at your option offer warranty protection in exchange for a fee.

@item
You may modify your copy or copies of the Program or any portion
of it, thus forming a work based on the Program, and copy and
distribute such modifications or work under the terms of Section 1
above, provided that you also meet all of these conditions:

@enumerate a
@item
You must cause the modified files to carry prominent notices
stating that you changed the files and the date of any change.

@item
You must cause any work that you distribute or publish, that in
whole or in part contains or is derived from the Program or any
part thereof, to be licensed as a whole at no charge to all third
parties under the terms of this License.

@item
If the modified program normally reads commands interactively
when run, you must cause it, when started running for such
interactive use in the most ordinary way, to print or display an
announcement including an appropriate copyright notice and a
notice that there is no warranty (or else, saying that you provide
a warranty) and that users may redistribute the program under
these conditions, and telling the user how to view a copy of this
License.  (Exception: if the Program itself is interactive but
does not normally print such an announcement, your work based on
the Program is not required to print an announcement.)
@end enumerate

These requirements apply to the modified work as a whole.  If
identifiable sections of that work are not derived from the Program,
and can be reasonably considered independent and separate works in
themselves, then this License, and its terms, do not apply to those
sections when you distribute them as separate works.  But when you
distribute the same sections as part of a whole which is a work based
on the Program, the distribution of the whole must be on the terms of
this License, whose permissions for other licensees extend to the
entire whole, and thus to each and every part regardless of who wrote it.

Thus, it is not the intent of this section to claim rights or contest
your rights to work written entirely by you; rather, the intent is to
exercise the right to control the distribution of derivative or
collective works based on the Program.

In addition, mere aggregation of another work not based on the Program
with the Program (or with a work based on the Program) on a volume of
a storage or distribution medium does not bring the other work under
the scope of this License.

@item
You may copy and distribute the Program (or a work based on it,
under Section 2) in object code or executable form under the terms of
Sections 1 and 2 above provided that you also do one of the following:

@enumerate a
@item
Accompany it with the complete corresponding machine-readable
source code, which must be distributed under the terms of Sections
1 and 2 above on a medium customarily used for software interchange; or,

@item
Accompany it with a written offer, valid for at least three
years, to give any third party, for a charge no more than your
cost of physically performing source distribution, a complete
machine-readable copy of the corresponding source code, to be
distributed under the terms of Sections 1 and 2 above on a medium
customarily used for software interchange; or,

@item
Accompany it with the information you received as to the offer
to distribute corresponding source code.  (This alternative is
allowed only for noncommercial distribution and only if you
received the program in object code or executable form with such
an offer, in accord with Subsection b above.)
@end enumerate

The source code for a work means the preferred form of the work for
making modifications to it.  For an executable work, complete source
code means all the source code for all modules it contains, plus any
associated interface definition files, plus the scripts used to
control compilation and installation of the executable.  However, as a
special exception, the source code distributed need not include
anything that is normally distributed (in either source or binary
form) with the major components (compiler, kernel, and so on) of the
operating system on which the executable runs, unless that component
itself accompanies the executable.

If distribution of executable or object code is made by offering
access to copy from a designated place, then offering equivalent
access to copy the source code from the same place counts as
distribution of the source code, even though third parties are not
compelled to copy the source along with the object code.

@item
You may not copy, modify, sublicense, or distribute the Program
except as expressly provided under this License.  Any attempt
otherwise to copy, modify, sublicense or distribute the Program is
void, and will automatically terminate your rights under this License.
However, parties who have received copies, or rights, from you under
this License will not have their licenses terminated so long as such
parties remain in full compliance.

@item
You are not required to accept this License, since you have not
signed it.  However, nothing else grants you permission to modify or
distribute the Program or its derivative works.  These actions are
prohibited by law if you do not accept this License.  Therefore, by
modifying or distributing the Program (or any work based on the
Program), you indicate your acceptance of this License to do so, and
all its terms and conditions for copying, distributing or modifying
the Program or works based on it.

@item
Each time you redistribute the Program (or any work based on the
Program), the recipient automatically receives a license from the
original licensor to copy, distribute or modify the Program subject to
these terms and conditions.  You may not impose any further
restrictions on the recipients' exercise of the rights granted herein.
You are not responsible for enforcing compliance by third parties to
this License.

@item
If, as a consequence of a court judgment or allegation of patent
infringement or for any other reason (not limited to patent issues),
conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot
distribute so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you
may not distribute the Program at all.  For example, if a patent
license would not permit royalty-free redistribution of the Program by
all those who receive copies directly or indirectly through you, then
the only way you could satisfy both it and this License would be to
refrain entirely from distribution of the Program.

If any portion of this section is held invalid or unenforceable under
any particular circumstance, the balance of the section is intended to
apply and the section as a whole is intended to apply in other
circumstances.

It is not the purpose of this section to induce you to infringe any
patents or other property right claims or to contest validity of any
such claims; this section has the sole purpose of protecting the
integrity of the free software distribution system, which is
implemented by public license practices.  Many people have made
generous contributions to the wide range of software distributed
through that system in reliance on consistent application of that
system; it is up to the author/donor to decide if he or she is willing
to distribute software through any other system and a licensee cannot
impose that choice.

This section is intended to make thoroughly clear what is believed to
be a consequence of the rest of this License.

@item
If the distribution and/or use of the Program is restricted in
certain countries either by patents or by copyrighted interfaces, the
original copyright holder who places the Program under this License
may add an explicit geographical distribution limitation excluding
those countries, so that distribution is permitted only in or among
countries not thus excluded.  In such case, this License incorporates
the limitation as if written in the body of this License.

@item
The Free Software Foundation may publish revised and/or new versions
of the General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

Each version is given a distinguishing version number.  If the Program
specifies a version number of this License which applies to it and ``any
later version'', you have the option of following the terms and conditions
either of that version or of any later version published by the Free
Software Foundation.  If the Program does not specify a version number of
this License, you may choose any version ever published by the Free Software
Foundation.

@item
If you wish to incorporate parts of the Program into other free
programs whose distribution conditions are different, write to the author
to ask for permission.  For software which is copyrighted by the Free
Software Foundation, write to the Free Software Foundation; we sometimes
make exceptions for this.  Our decision will be guided by the two goals
of preserving the free status of all derivatives of our free software and
of promoting the sharing and reuse of software generally.

@iftex
@heading NO WARRANTY
@end iftex
@ifinfo
@center NO WARRANTY
@end ifinfo

@item
BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
PROVIDE THE PROGRAM ``AS IS'' WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
REPAIR OR CORRECTION.

@item
IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.
@end enumerate

@iftex
@heading END OF TERMS AND CONDITIONS
@end iftex
@ifinfo
@center END OF TERMS AND CONDITIONS
@end ifinfo

@page
@unnumberedsec How to Apply These Terms to Your New Programs

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
convey the exclusion of warranty; and each file should have at least
the ``copyright'' line and a pointer to where the full notice is found.

@smallexample
@var{one line to give the program's name and a brief idea of what it does.}
Copyright (C) 19@var{yy}  @var{name of author}

This program is free software; you can redistribute it and/or modify 
it under the terms of the GNU General Public License as published by 
the Free Software Foundation; either version 2 of the License, or 
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
@end smallexample

Also add information on how to contact you by electronic and paper mail.

If the program is interactive, make it output a short notice like this
when it starts in an interactive mode:

@smallexample
Gnomovision version 69, Copyright (C) 19@var{yy} @var{name of author}
Gnomovision comes with ABSOLUTELY NO WARRANTY; for details
type `show w'.  
This is free software, and you are welcome to redistribute it 
under certain conditions; type `show c' for details.
@end smallexample

The hypothetical commands @samp{show w} and @samp{show c} should show
the appropriate parts of the General Public License.  Of course, the
commands you use may be called something other than @samp{show w} and
@samp{show c}; they could even be mouse-clicks or menu items---whatever
suits your program.

You should also get your employer (if you work as a programmer) or your
school, if any, to sign a ``copyright disclaimer'' for the program, if
necessary.  Here is a sample; alter the names:

@smallexample
Yoyodyne, Inc., hereby disclaims all copyright interest in the program
`Gnomovision' (which makes passes at compilers) written by James Hacker.

@var{signature of Ty Coon}, 1 April 1989
Ty Coon, President of Vice
@end smallexample

This General Public License does not permit incorporating your program into
proprietary programs.  If your program is a subroutine library, you may
consider it more useful to permit linking proprietary applications with the
library.  If this is what you want to do, use the GNU Library General
Public License instead of this License.

@contents
@bye
